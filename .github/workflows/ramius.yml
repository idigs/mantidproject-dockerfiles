

name: ramius
on: workflow_dispatch

jobs:
  job_debug:
    runs-on: ubuntu-latest
    steps:
      - if: true
        name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - if: true
        name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - if: true
        name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - if: true
        name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: dump shell env vars
        run: |
          env -0 | while IFS='' read -d '' line ; do printf '%s\t: %s\n' "${line%%=*}" "${line#*=}" | expand -t 30 | sed ':a;N;$!ba;s/\n/ /g'; done | LC_COLLATE=C sort -b

  job_setup:
    runs-on: ubuntu-latest
    steps:
      - name: retrieve ${{ github.event.repository.name }} project
        uses: actions/checkout@v4

      - id: semver_tag
        name: retrieve semantic version of latest tag
        run: |
          read -r semver_tag <<< $(./utils/equate_tag_semver "library/almalinux:latest")
          test -n ${semver_tag} || exit 1
          echo "semver_tag=${semver_tag}" >> $GITHUB_OUTPUT
    outputs:
      semver_tag: ${{ steps.semver_tag.outputs.semver_tag }}


  job_docker:
    if: true
    runs-on: ubuntu-latest
    needs: [ job_setup ]
    steps:
      - name: debug
        run: |
          pwd
          ls -la

      - name: retrieve ${{ github.event.repository.name }} project
        uses: actions/checkout@v4

      - name: setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push - mantid development image
        uses: docker/build-push-action@v6
        with:
          context:  Linux/development/docker
          file:     Linux/development/docker/Alma9.Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/mantid-development-alma:${{ needs.job_setup.outputs.semver_tag }}
          build-args: |
            SEMVER_TAG=${{ needs.job_setup.outputs.semver_tag }}


